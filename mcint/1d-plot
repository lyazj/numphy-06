#!/usr/bin/env python3

import sys
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

mu = 0.1772453850902791
sigma = np.sqrt(0.12533141373155 - np.square(mu))

data = {}
with open('1d.out') as f:
    while True:
        n = f.readline()
        if not n:
            break
        n = int(n.split(':')[0])
        d = []
        for l in f:
            l = l.strip()
            if not l:
                break
            d.append(l)
        data[n] = np.array(d, dtype='float64')

plt.figure(1, (12, 6))
for (i, (n, d)) in enumerate(data.items(), 1):
    plt.subplot(2, 3, i)
    plt.xlabel('integral result')
    plt.ylabel('density distribution')
    print(f'{n}:\n{d}\n', flush=True)
    mean = np.mean(d)
    std = np.std(d)
    print(f'{n:8}\t{mean}\t{std}\t{mean - mu}\t{sigma / np.sqrt(n)}', flush=True, file=sys.stderr)
    n, bins, patches = plt.hist(d, 50, density=True, histtype='step', label=f'{n} points')
    pdf = norm.pdf(bins, mean, std)
    plt.plot(bins, pdf, label=f'$\\mu = {mean:.6f},\\ \\sigma = {std:.6f}$')
    plt.legend(loc='upper right')
plt.tight_layout()
plt.savefig(__file__ + '.pdf')
